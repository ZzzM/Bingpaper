default_platform(:ios)

def delete_temp_keychain(name)
  delete_keychain(
    name: name
  ) if File.exist? File.expand_path("~/Library/Keychains/#{name}-db")
end

def create_temp_keychain(name, password)
  create_keychain(
    name: name,
    password: password,
    unlock: false,
    timeout: 3600
  )
end

def ensure_temp_keychain(name, password)
  delete_temp_keychain(name)
  create_temp_keychain(name, password)
end

platform :ios do


  APP_NAME = ENV["APP_NAME"]

  lane :setup do

    # keychain_name = "#{APP_NAME}-signing"
    # keychain_password = "password"

    # ensure_temp_keychain(keychain_name, keychain_password)
    # install_provisioning_profile(path: ENV["PP_PATH"])
    # install_provisioning_profile(path: ENV["PP_NE_PATH"])
    # import_certificate(
    #   certificate_path: ENV["CERTIFICATE_PATH"],
    #   certificate_password: ENV["CERTIFICATE_PASSWORD"],
    #   keychain_name: keychain_name,
    #   keychain_password: keychain_password
    # )


    version = last_git_tag
    commit = last_git_commit
    date = Time.now.utc.localtime("+08:00").strftime("%Y.%m.%d %k:%M")  

    increment_version_number_in_xcodeproj(version_number: version, scheme: APP_NAME)
    increment_build_number_in_xcodeproj(build_number: version, scheme: APP_NAME)

    update_info_plist( 
      plist_path: "#{APP_NAME}/Info.plist",
      block: proc do |plist|
        plist[:CommitHash] = commit[:abbreviated_commit_hash]
        plist[:CommitDate] = date
        plist[:FIR_CLI_API_TOKEN] = ENV["FIR_CLI_API_TOKEN"]
      end
    )



  end


  lane :build do
    build_app(
      clean: true,
      silent: true,
      scheme: APP_NAME,
      export_method: 'ad-hoc'
    )
  end

  
  lane :package do
    
    setup
    build
    clean
    fir_cli
    
  end

  lane :clean do
    sh "rm -vfr ~/Library/Developer/Xcode/Archives/*"
  end


  lane :appcast do
    clean
    fir_cli
  end

  lane :test do

    version = last_git_tag
    commit = last_git_commit
    date = Time.now.utc.localtime("+08:00").strftime("%Y.%m.%d %k:%M")  

    increment_version_number_in_xcodeproj(version_number: version)
    increment_build_number_in_xcodeproj(build_number: version)

    update_info_plist( 
      plist_path: "Bingpaper/Info.plist",
      block: proc do |plist|
        plist[:CommitHash] = "x"
        plist[:CommitDate] = date
      end
    )
  end

end
